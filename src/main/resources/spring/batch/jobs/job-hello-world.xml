<beans xmlns="http://www.springframework.org/schema/beans" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

	<import resource="../config/context.xml" />
	<import resource="../config/database.xml" />

	<bean id="report" class="com.kyu.batch.model.Report" scope="prototype" />
	<bean id="itemProcessor" class="com.kyu.batch.CustomItemProcessor" />

	<!-- job은 최상위 엔티티이며 배치 처리를 정의할 때 가장 먼저 설정 -->
	<batch:job id="helloWorldJob">
		<batch:step id="step1" next="deleteDir">
			<batch:tasklet>
				<batch:chunk reader="cvsFileItemReader" writer="mysqlItemWriter" processor="itemProcessor" commit-interval="10" />
			</batch:tasklet>
		</batch:step>
		<batch:step id="deleteDir">
			<batch:tasklet ref="fileDeletingTasklet" />
		</batch:step>
	</batch:job>

	<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:cvs/input/report.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id,sales,qty,staffName,date" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.kyu.batch.ReportFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="file:xml/outputs/report.xml" />
		<property name="marshaller" ref="reportMarshaller" />
		<property name="rootTagName" value="report" />
	</bean>

	<bean id="mysqlItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
	<property name="dataSource" ref="dataSource" />
	<property name="sql">
		<value>
            <![CDATA[
            	INSERT INTO ROW_REPORT (id, sales, qty, staffName, DATE)
					VALUES	(:id, :sales, :qty, :staffName, :date)
            ]]>
		</value>
	</property>
	<!-- It will take care matching between object property and sql name parameter -->
	<property name="itemSqlParameterSourceProvider">
		<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
	</property>
</bean>

	<bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.kyu.batch.model.Report</value>
			</list>
		</property>
	</bean>

	<bean id="fileDeletingTasklet" class="com.kyu.batch.tasklet.FileDeletingTasklet">
		<property name="directory" value="file:xml/outputs/" />
	</bean>

</beans>